<html lang="en">
<head>
    <meta charset="UTF-8">
    <link rel="shortcut icon" href="#">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="/adminlte/dist/css/adminlte.min.css" />
    <!-- jQuery -->
    <script src="/adminlte/plugins/jquery/jquery.min.js"></script>
    <!-- Bootstrap 4 -->
    <script src="/adminlte/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <title>Document</title>
    <script>
        let lprodId ="";
        let lprodGu ="";
        let lprodNm ="";

        function getLprodList(){
            $.ajax({
                url : "/api/lprods",
                method : "post",
                dataType : "json",
                success : function(result){
                    console.log(result);
                    let str = "";
                    result.forEach(lprod=>{
                        // 상세보기
                        // 1) 무엇을 클릭했는가?
                        // 2) 그 무엇에 대한 데이터를 모달에 출력
                        str += `
                            <tr>
                                <td>${lprod.lprodId}</td>
                                <td><a class="clsTd" data-lprod-id="${lprod.lprodId}" data-toggle="modal" href="#modal-lg" >${lprod.lprodGu}</a></td>
                                <td>${lprod.lprodNm}</td>
                            </tr>
                        `;
                    });
                    //console.log(str);
                    $('#tbdy').html(str);
                },
            });
        }
        //$(function(){
        document.addEventListener("DOMContentLoaded", ()=>{
            getLprodList();

            $("#modalBtnDelete").on("click", function(){
                lprodId = $("#modalLprodId").val();
                console.log("lprodId : ", lprodId);

                if(confirm("삭제하시겠습니까?")){
                    let data = {
                        "lprodId" : lprodId
                    };
                    console.log("data : ", data)
                    $.ajax({
                        url:"/api/lprods/delete",
                        contentType:"application/json;charset=utf-8",
                        data:JSON.stringify(data),
                        type:"post",
                        success:function(result){
                            console.log("result : ", result);

                            // 모달닫기
                            $("#modal-lg").modal("hide");
                            // 목록 다시 불러오기
                            getLprodList();
                        }
                    })
                } // end if
            });
            

            // 수정확인 클릭
            $('#modalBtnConfirm').on('click',function(){
                lprodId = $('#modalLprodId').val();
                lprodGu = $('#modalIptLprodGu').val();
                lprodNm = $('#modalIptLprodNm').val();

                let data = {
                    "lprodId" : lprodId,
                    "lprodGu" : lprodGu,
                    "lprodNm" : lprodNm,
                };
                console.log("data : ",data);

                // 수정 비동기 요청
                $.ajax({
                    url : "/api/lprod/update",
                    contentType : "application/json;charset=utf-8",
                    data : JSON.stringify(data),
                    type : "post",
                    dataType : "json",
                    success : function(result){
                        console.log(result)
                        //1. 목록 최신화
                        getLprodList();
                        //2. 모달창 일반 모드로 처리
                        $('#modalLprodGu').html(lprodGu);
                        $('#modalLprodNm').html(lprodNm);

                        $('#spnGen').css("display", "block");
                        $('#spnEdit').css("display", "none");
                    },
                    error : function(err){
                        console.log(err)
                    },
                });
            })

            // 취소버튼 클릭
            $("#modalBtnCancel").on("click",function(){
                $('#modalLprodGu').html(lprodGu);
                $('#modalLprodNm').html(lprodNm);

                $('#spnGen').css("display", "block");
                $('#spnEdit').css("display", "none");
            })

            // 수정버튼 클릭
            $('#modalBtnEdit').on('click',function(){
            // id, title, content의 값을 변수에 저장
                lprodId   = $('#modalLprodId').val();
                lprodGu   = $('#modalLprodGu').html();
                lprodNm   = $('#modalLprodNm').html();

                console.log("lprodId : ", lprodId);
                console.log("lprodGu : ", lprodGu);
                console.log("lprodNm : ", lprodNm);
                // id="modalLprodGu" 요소 안에 text처리
                let strlprodGu = `
                <input type="text" class="form-control" id="modalIptLprodGu" placeholder="글제목" value="${lprodGu}" style="font-weight : bold;"/>
                `;
                $('#modalLprodGu').html(strlprodGu);
                // id="modalLprodNm" 요소 안에 text처리
                let strlprodNm = `
                <input type="text" class="form-control" id="modalIptLprodNm" placeholder="글내용" value="${lprodNm}"/>
                `;
                $('#modalLprodNm').html(strlprodNm);

                //4. 버튼 변경
                $('#spnGen').css("display", "none");
                $('#spnEdit').css("display", "block");
            })

            // 상세 모달 클릭 (비동기 방식 이벤트 처리)
            document.addEventListener('click', function(event){
                // document에 이벤트 리스너를 등록하여 동적으로 생성된 요소에도
                // 이벤트 처리를 위임(delegation)함
                // 클릭된 요소가 class = "clsTd" 을 가지고 있는지 확인
                //console.log(event.target.classList);
                lprodId = "";
                if(event.target.classList.contains("clsTd")){
                    //let lprodId = $(this).data("lprodId"); //2
                    lprodId = event.target.dataset.lprodId; // 2
                    console.log("lprodId : ", lprodId);

                }   // end of if(event.target.classList.contains("clsTd"))
                else return;

                fetch(`/api/lprod/${lprodId}`,{
                    method : "GET",
                    headers : {
                        "Content-Type" : "application/json" // 응답 데이터 타입을 JSON으로 명시
                    },
                })
                .then(response => response.json()) //  서버로부터의 응답(JSON String)을 JSON 형태로 파싱합니다.
                .then(result=>{
                    console.log(result);
                    // 1. 모달의 id가 "modalLprodGu"인 요소의 내용을 서버에서 받은 lprodGu 값으로 업데이트
                    const obj_modalLprodGu = document.getElementById("modalLprodGu")
                    if(obj_modalLprodGu){
                        obj_modalLprodGu.textContent = result.lprodGu;
                    }
                    // 2. 모달의 id가 "modalLprodNm"인 요소의 내용을 서버에서 받은 lprodNm 값으로 업데이트
                    const obj_modalLprodNm = document.getElementById("modalLprodNm")
                    if(obj_modalLprodNm){
                        obj_modalLprodNm.textContent = result.lprodNm;
                    }

                    const obj_modalLprodId = document.getElementById("modalLprodId");
                    if(obj_modalLprodId){
                        obj_modalLprodId.value = result.lprodId;
                    }
                    //4. 일반모드로 변환
                    $('#spnGen').css("display", "block");
                    $('#spnEdit').css("display", "none");
                }) //  JSON 형태로 파싱된 result를 통해 비즈니스 로직 수행
                .catch(xhr=>{console.log(xhr)}) // 오류 처리



            });
        })
    </script>
</head>
<body>

<!-- Main content -->
<section class="content">
    <div class="container-fluid">
        <!-- ///// body 시작 ///// -->
        <!-- msg 사용 범위 설정 시작 -->

            <div class="alert alert-primary alert-dismissible"><!-- 메시지 창 작성 -->

                <button type="button" class="btn-close" data-dismiss="alert" aria-label="Close">Close</button>
            </div>

        <!-- msg 사용 범위 설정 끝 -->
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">상품분류 아이디</th>
                    <th scope="col">상품분류 구분코드</th>
                    <th scope="col">상품분류 명</th>
                </tr>
            </thead>
            <tbody id="tbdy">
            <!-- model.addAttribute("lprodList", lprodEntityList);
            lprodEntityList 반복하면서
            lprodEntity : Lprod(lprodId=1, lprodGu=P101, lprodNm=즐거운 모험1)
            lprodEntity : Lprod(lprodId=2, lprodGu=P102, lprodNm=즐거운 모험2)
            lprodEntity : Lprod(lprodId=3, lprodGu=P201, lprodNm=즐거운 모험3)
            -->
            <!--
            {{#lprodList}}
                <tr>
                    <td>{{lprodId}}</td>
                    <td><a href="/lprod/{{lprodId}}">{{lprodGu}}</a></td>
                    <td>{{lprodNm}}</td>
                </tr>
            {{/lprodList}}
            -->
            </tbody>
        </table>
        <a href="/lprod/new" class="btn btn-primary">상품분류 생성</a>
        <!-- ///// body 끝 ///// -->
    </div><!-- /.container-fluid -->
</section>
<!-- /.content -->

<!--///상품분류 상세 모달 시작
{
    "lprodId": 1,
    "lprodGu": "P201",
    "lprodNm": "전자제품"
}
///-->
<!-- 상품분류 상세 모달 시작 -->
<div class="modal fade" id="modal-lg">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="modalLprodGu"></h4>
                <input type="text" id="modalLprodId" value=""/>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="modalLprodNm"></p>
            </div>
            <div class="modal-footer justify-content">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <!-- 일반 모드 -->
                <span id="spnGen">
                    <button type="button" class="btn btn-warning" id="modalBtnEdit">수정</button>
                    <button type="button" class="btn btn-danger" id="modalBtnDelete">삭제</button>
                </span>
                <!-- 수정 모드(처음에는 안보임) -->
                <span id="spnEdit" style="display : none;">
                    <button type="button" class="btn btn-primary" id="modalBtnConfirm">확인</button>
                    <button type="button" class="btn btn-secondary" id="modalBtnCancel">취소</button>
                </span>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- 글 상세 모달 끝 -->

</body>
</html>